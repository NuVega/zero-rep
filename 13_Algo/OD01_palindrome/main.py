# 1. –í–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
# 2. –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º:
# 2.1 –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
# 2.2 –ò—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –ø—Ä–æ—á–∏–µ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
# 3. –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É
# 4. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º

def is_palindrome(text: str) -> bool:
    s = "".join(ch.lower() for ch in text if ch.isalnum())
    return s == s[::-1]

if __name__ == "__main__":
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–≤. –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞).")

    while True:
        user_input = input(">>> ")

        if user_input.lower() in ("exit"):
            print("–î–æ –≤—Å—Ç—Ä–µ—á–∏ üëã")
            break

        if is_palindrome(user_input):
            print("‚úÖ –≠—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º")
        else:
            print("‚ùå –≠—Ç–æ –Ω–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º")
